%
% Time series analysis
% Computer exercise 2  
%
%
clear; 
close all;
% addpath('functions', '/data')     % Add this line to update the path
addpath('../functions', '../data')     % Add this line to update the path (Hanna)

%% Generate some data following the Box-Jenkins model:

rng(0)
n = 500;                % Number of samples
A3=[1 .5];
C3 = [1 -.3 .2];
w= sqrt(2)*randn(n+100,1); 
x = filter (C3,A3,w);           % Create the input

A1 = [1 -.65];
A2 = [1 .90 .78];
C=1;
B=[0 0 0 0 .4];
e = sqrt(1.5) * randn(n + 100,1);
y = filter(C,A1,e) + filter(B,A2,x); % Create the output

x = x(101:end) , y = y(101:end) % Omit initial samples 
clear A1, A2, C, B, e, w, A3, C3

%% Plotting the data
close all
clc

m=50;
plot(x)
basicPlot(x,m,'x-data') 

%% Create an ARMA-model for the input xt as function of white noise
close all
clc

m=50;

%Initial guess 
%ACF ringing, PACF peak at 1 --> AR(1)?
na = 1;
nc = 0;
data = iddata(x);                   
model_x = armax(data, [na nc]); 
present(model_x);
e_hat = myFilter(model_x.a, model_x.c, x);
basicPlot(e_hat,m,'ARMA(1,0)')

whitenessTest(e_hat)

%Knowing it's an ARMA(1,2), test it with an ARMA(1,2) too 
%Model 1 according to instructions
na = 1;
nc = 2;
data = iddata(x);                   
x_arma = armax(data, [na nc]); 
present(x_arma);
e_hat = myFilter(x_arma.a, x_arma.c, x);
basicPlot(e_hat,m,'ARMA(1,2)')

whitenessTest(e_hat)

%We tested the same thing with idpoly and got the same result
% Seems that it's nice to use when wanting to control what orders are
% "active" in the polynomial

%% Pre-whitening
close all;
eps_t = myFilter(x_arma.a, x_arma.c, y); 
w_t = myFilter(x_arma.a, x_arma.c,x); 
basicPlot(eps_t,m,'Eps_t');
basicPlot(w_t,m,'W_t');

%% Compute CCF for eps_t = H(z) * w_t + v_t
close all;
M=40;
stem(-M:M,crosscorr(w_t ,eps_t,M)); 
title('Cross correlation function'), xlabel('Lag')
hold on
plot(-M:M, 2/sqrt(n)*ones(1,2*M+1), 'r--') 
plot(-M:M, -2/sqrt(n)*ones(1,2*M+1),'r--') 
hold off

%% Determine suitable model orders for delay, A, B
% Delay: Delay exceeds confidence interval at lag 4, thus should be d = 4. 
% R (order for A2): Could be 2, as we have some ringing in the correlation.
% S: We see that it's decaying immedeatly, as s+d = time of decay, s = 0. 
%TBC WHY IT IS LIKE THIS

A2 = [1 0 0]; 
B = [0 0 0 0 1];
Mi = idpoly ([1] ,[B] ,[] ,[] ,[A2]);
z = iddata(y,x);
Mba2 = pem(z,Mi); present(Mba2)
etilde = resid (Mba2, z );

%% Check etilde 
close all;
clc; 

%etilde and x should be uncorrelated --> Looks good, not sign diff from 0
M=40;
stem(-M:M,crosscorr(etilde.y ,x ,M)); 
title('Cross correlation function'), xlabel('Lag')
hold on
plot(-M:M, 2/sqrt(n)*ones(1,2*M+1), 'r--') 
plot(-M:M, -2/sqrt(n)*ones(1,2*M+1),'r--') 
hold off

% Is etilde white? 
% No, but we have now only modelled half of the BJ model, as y depends on
% something with x AND the error term.   
basicPlot(etilde.y,m,'etilde');
whitenessTest(etilde.y);

%% Plot etilde
close all;
clc; 

plot(etilde);
basicPlot(etilde.y,m,'etilde');

%% Determine orders for A1 and C1, model etilde = C1/A1 * e
close all;
clc; 

A1 = [1 0 0]; 
C1 = [0 0 0 0 1];
error_model = idpoly ([1] ,[B] ,[] ,[] ,[A2]);
Mba2 = pem(z,error_model); present(Mba2)
etilde = resid (Mba2, z );


